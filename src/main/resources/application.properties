server.address=127.0.0.1
server.port=8090
server.context-path=/application

#FIXME: Find a better solution for the Tomcat container for the jdbc driver (at the moment it works only if registering the driver with Class.forName("com.mysql.jdbc.Driver") -> not nice)


# available spring profiles:
# - DEFAULT_AUTH_PROVIDER - use the default authentication manager in the DefaultAuthenticationProviderSecurityConfig class
# - CUSTOM_AUTH_PROVIDER - use the custom authentication manager in the CustomAuthenticationProviderSecurityConfig class
# - CUSTOM_SECURITY_FILTER - use a custom securityFilter and the application's custom security controller for login, with a custom page
# - IN_MEMORY_AUTH_WITH_SPRING_SEC_CONTROLLER_LOGIN - use an in-memory authentication and the default spring security controller for login, with a custom page
spring.profiles.active=IN_MEMORY_AUTH_WITH_SPRING_SEC_CONTROLLER_LOGIN

spring.session.store-type=jdbc
spring.datasource.url=jdbc:mysql://localhost:3306/application_security_db
spring.datasource.username=root
spring.datasource.password=

application.security.unrestrictedUrls=/description, /security/manualLogin, /security/manualLogout, /security/accessDenied
application.security.loginUrl=/security/manualLogin
application.security.logoutUrl=/security/manualLogout
application.security.redirectToUrlAfterLogout=/login
logging.level.org.springframework.security=debug
logging.level.com.mysql=off